                                     SQLNOTES
=====================================================================================================
SQL(Structured Query Language)
---------------------------------
    -It is a language used to interact with a database.
    -It is used to create, modify and delete data in a database.

Data:
------
     - collection of information that is stored in a database.
     - It can be structured or unstructured.

Database:
--------
     - It is a container/place where data is stored.
     - It is a collection of data/information that is stored in a database. 
     Types:
          1. Relational Databases: it is a type of database where data is stored in tables.
          2. Non-Relational Databases: it is a type of database where data is stored in documents/objects.
          3. Graph Databases: it is a type of database where data is stored in graphs.

----------------------------------------------------------------------------------------------
      database                                    DBMS(Database Management System)
-------------------------------------------------------------------------------------
It is a collection of data that is stored         Software used to manage and interact 
in a database.                                    with a database.

ex: MySQL, Oracle, MS-SQL, DB2, SQLite, etc.      ex:flat like dbms, tree like dbms,
                                                     graph like dbms, RDBMS, etc.

-------------------------------------------------------------------------------------------------
RDBMS :(Relational Database Management System)
----------------------------------------------
       - it is a type of database where data is stored in tables with rows and columns.
       - Two tables can be related to each other by a primary key and a foreign key.


Popular RDBMS:
------------
      1.MySQL - free and open source , widely used
      2.Oracle - commercial , used in enterprise level
      3.MS-SQL - commercial , used in enterprise level
      4.DB2 - commercial , used in enterprise level 
      5.SQLite - free and open source , used in enterprise level
      6.PostgreSQL - free and open source , widely used mainly used in microsoft's azure


Database Vendors:
----------------
    Oracle - 10G, 11G, 12G
    MySQL - 5.5, 5.6, 5.7, 8.0
    IBM - DB2
    Microsoft - MS-SQL
    SAP - sy base


Table(Entity):
-------------- 
       - it is a collection of data that is stored in a database in
         the form of rows and columns.
    ex: Student - table /Entity
        -attributes(columns) - RollNo, Name, Email, Mobile, Address
        -column:a field in a table, represents a single attribute
        -row:a single record


Student
-------------------------------------------------------------------------
RollNo    |    Name     |     Email     |      Mobile    |      Address  |
-------------------------------------------------------------------------
1         |     Raj     |     raj@.com   |     1234567890 |    Bangalore |

2         |     Ram     |     ram@.com   |     6788888888 |    Bangalore |

3         |     Rani    |     rani@.com   |    9999999999 |    Bangalore |
--------------------------------------------------------------------------


Data types:
----------
    -It is a type of data that is stored in a database.
    Types:
         1. Numeric data types
         2. Character data types
         3. Date and time data types
         4. Logical data types

EX: INT - Numeric data type
    CHAR - Character data type
    VARCHAR - Character data type - indicates with ''(single quotes)
    DATE - Date and time data type
    BOOLEAN - Logical data type
    FLOAT - Numeric data type(decimal numbers)

SQL Syntax and Rules:
---------------------
     1.commands are written in english language.
     2.Each command is terminated by a semicolon(;).
     3.Keywords are written in case - insensitive.(uppercase -optional but recommended)


To display databases:
 CMD: show database;

to change database:
 CMD: use database_name;

to display tables in a database:
 CMD: show tables;

to display fields in a table
 CMD:  desc table_name;
       show fields in table_name;
       show columns in table_name;


database/schema:
---------------
1.to display databases: CMD: show databases;
2.to create a database: CMD: create database database_name;
3.to delete a database: CMD: drop database database_name;
4.to change database: CMD: use database_name;


table/entity:
-------------
1.to display tables: CMD: show tables;

DDL(Data Definition Language):
----------------------------
                by using ddl , we can create, modify and delete tables in a database.

2.to delete a table: CMD: drop table table_name;
3.to rename a table tableName: CMD: rename table tableName to newTableName;
4.to create a table: 
             -data types:INT, CHAR, VARCHAR, DATE, BOOLEAN, FLOAT
             -constraints : primary key, foreign key, unique, not null, check, default
    syntax:
          create table table_name(
              column_name data_type constraints,
              column_name data_type constraints,
              .  .  .
          )
 
 constraints:
 ------------
1.unique - it makes sure all values in a column are unique.
2.not null - it makes sure all values in a column are not null.
3.primary key - it makes sure all values in a column are unique and not null.
              - it is a combination of unique and not null.
              - In a table there can be only one primary key.
4.foreign key - It also called as a reference key.
              - It built's a relationship between two tables.
              - In a table there can be any number of foreign keys.
                foreign key in the current table is called child table 
                and the reference table called as parent table
        In the below example RollNo is primary key in student , 
        but it acting like foreign key in marks table
                Student(RollNo, Name, Email, Mobile, Address) -parent table/master table
                marks(id , subject, marks, date,RollNo) - child table/detail table
5.check - it makes sure all values in a column are valid.
6.default- it specifies a default value for a column.
7.auto_increment - it makes sure that the values in a column are auto-incremented.


attributes/columns/fields:
--------------------------

1.to display fields in a table: CMD: desc table_name;
                                CMD: show fields in table_name;
                                CMD: show columns in table_name;
2.to add a column:
     CMD: alter table table_name add column column_name data_type constraints;
3.to modify a column: 
     CMD: alter table table_name modify column column_name data_type constraints;
4.to rename a column:
     CMD: alter table table_name change column old_column_name new_column_name data_type constraints;
     CMD: alter table table_name rename column old_column_name to new_column_name;
5.to delete a column:
     CMD: alter table table_name drop column column_name;
---------------------------------------------------------------------------------
drop                                               truncate
---------------------------------------------------------------------------------
drop table table_name;                             truncate table table_name;

it will delete the table permanently               it will delete all the records/data 
   from the database.                              in the table.Table structure will
                                                   remains same
---------------------------------------------------------------------------------


DML(Data Manipulation Language):
----------------------------------
            by using dml , we can insert, update and delete data in a table.

Insert :
   CMD: insert into tableName (column1, column2, column3, column4)
         values (value1, value2, value3, value4);

         insert into tableName values (value1, value2, value3, value4);

Update :
   CMD: update tableName set column1=value1, column2=value2,..
         where condition;

Delete :
   CMD: delete from tableName where condition;


-------------------------------------------------------------------------------
              CMD: mysql -u root -p < employees.sql

mysql used to import data from sql file to database
          -u root -p means root user and password
          employees.sql is a sql file
-------------------------------------------------------------------------------




DQL(Data Query Language):
-------------------------
            -by using dql , we can fetch data from a table.

Q. write a query to fetch all the records from a table?
Ans: select * from tableName;

Q. write a query to fetch name and email column from employee table?
Ans: select name, email from employee;

filtering records:
------------------
      - filtering records based on conditions/operators/expressions.
      
Where clause:
=============
      - filtering records based on conditions.
    CMD: select * from tableName where condition;

Arithmetic operators:
-------------------
            + addition
            - subtraction
            * multiplication
            / division
            % modulus

Q.waq to display employee num with their salaries& decrease the salary by 10000;
ans: select empNo,salary-10000 from employee;

q.waq to display employee num with their daily salary;
ans: select empNo,salary/365 from employee;----365 days in a year

concatenation:
-------------
      - combining two or more strings together.
      - joining or merging 2 or more column data to a single column.
      - to achieve we can use concat() function. or || operator.(double vertical pipes)

q.waq to display in the below format (my name is last name)
ans : select concat('my name is ',lastName) as name from employee;
     select 'my name is '||lastName from employee; - will applicable to oracle ,
                                                    sql server
q. WAQ to display in the below format (firstName - lastName as fullName)   
   select concat(firstName,' - ',lastName) as fullName from employee;


order by:
--------
     -  it is a clause which is used to sort the result-set in ascending or descending order.
     -  by default it will sort the result-set in ascending order.
     -  to specify in ascending order use asc keyword.
     -  to specify in descending order use desc keyword.

Q. WAQ to display employee data based on hire date in ascending order? 
   select * from employees order by hireDate asc;

Relational operators:
---------------------
            = equal to
            != not equal to
            < less than
            > greater than
            <= less than or equal to
            >= greater than or equal to
            <> not equal to
     - relational operators used on where clause.

Q .WAQ to display employees data whose hire date is less than 1990? 
ans. select * from employee where hireDate<'1990-01-01';

logical operators:
------------------
            and - both the conditions should be true
            or  - either of the conditions should be true
            not - reverse the condition
     - logical operators used on where clause.

Q. WAQ to display employees data whose hire date is less than 1882 and gender is female?
ans. select * from employee where hireDate<'1882-01-01' and gender='F';

special operator:
----------------
         In  - used to specify multiple values in where clause
         between - used to specify a range in where clause
         like - used to specify a pattern in where clause
              - % - any number of characters
              - _ - any single character
        null - used to specify null value in where clause
             - null means no value/ no data
             -to achieve null we have to use a special operator called is
        not null - used to specify non-null value in where clause



Q. WAQ to display employees data whose salary in between 10000 and 20000?
ans . select * from employee where salary between 10000 and 20000;
                            or
     select * from employee where salary>=10000 and salary<=20000;

Q. WAQ to display employees name whose name contains the letter 'a'?
ans. select * from employee where name like '%a%';

Q. WAQ to display employees name whose hire date is ending with '01'? 
ans . select * from employee where hireDate like '%01';
         or
     select * from employee where hireDate like '_ _ _ _-_ _-01';

Q. WAQ to display employees data whose name starts with 'R'?
ans. select * from employee where name like 'R%';

Q. WAQ to display departments apart from d006 and d009?
ans. select * from departments where dept_no not in('d006','d009');

-----------------------------------------------------------------------------------------
functions  in sql:
------------------
        - functions are used to perform specific operations on data.
     
 1.Aggregate functions: 
 ---------------------
      - functions that returns a single value by working on a group of data.
      - it is also called as multi row functions.(dealing with multiple rows)
      1.sum()-> returns the sum of all values
      2.avg()-> returns the average of all values
      3.count()-> returns the count of all values
      4.max()-> returns the maximum value of all values
      5.min()-> returns the minimum value of all values

Q. WAQ to display total number of employees?
ans . select count(*) from employee;
-----------------------------------------------------------------------------
              numbers                 strings                dates
-----------------------------------------------------------------------------
sum           yes                      no                         no
avg           yes                      no                         no
count         yes                      yes                        yes
max           yes                      yes                        no
min           yes                      yes                        no
-----------------------------------------------------------------------------------------
2.Scalar functions:
------------------
      - functions that returns a single value by working on a single row of data.
      - single row functions.(dealing with single row)
      1.length()-> returns the length of a string
      2.upper()-> returns the string in upper case
      3.lower()-> returns the string in lower case
      4.substr()-> returns the substring of a string
                  substr(columnName, start index position, end index position)
      5.concat()-> returns the concatenation of two strings
      6.initcap()-> returns the string in title case
      7.replace()-> returns the string after replacing a substring with another substring
               -> replace(columnName, substringToReplace, substringToReplaceWith)

Q. WAQ to display first name and last name in upper case?
ans. select upper(first_name),upper(last_name) from employees; 

Q. WAQ to display the size of first_name column?
ans. select length(first_name) from employees;

Q. WAQ to replace last_name having facello to bacello;
ans. select replace(last_name,'facello','bacello') from employees;


Note:
-----
     single row functions can be used in select statement as well as in where clause.
     multi row functions can be used only in select statement.


Date Function:
-------------
       - used to perform date related operations.
       1.now()-> returns the current date and time
       2.current_date()-> returns the current date
       3.current_time()-> returns the current time
       4.current_timestamp()-> returns the current date and time


Q. WAQ to display current date?
ans. select current_date();

Q.WAQ to display year , month , day of employee joining date?
ans. select year(hireDate),month(hireDate),day(hireDate) from employees;

Q.WAQ to change the pattern of date?
ans. select date_format(hireDate,'%d-%m-%Y') from employees;

Math Functions:
--------------
       - used to perform mathematical operations.
       1.abs()-> returns the absolute value of a 9*/9+number
       2.ceil()-> returns the smallest integer greater than or equal to a number
       3.floor()-> returns the largest integer less than or equal to a number
       4.round()-> returns the nearest integer to a number
       5.sign()-> returns the sign of a number
       6.mod()-> returns the remainder of a number divided by another number
       7.Power()/pow()-> returns the value of a number raised to the power of another number

Q. WAT to round up a decimal value?
ans. select ceil(4.2) as result; // 5

Q. WAQ to round down a decimal value?
ans. select floor(4.2) as result; // 4

Q. WAQ to round a decimal value?
ans. select round(4.2) as result; // 4

Q.WAQ to get the power of a number?
ans . select pow(2,3) as result; // 8

Joins:
------
    - joining or merging one or more tables
    - used to combine rows from two or more tables based on a related column 
      between them.

Types of joins:
---------------
           1.cross join
           2.inner join/equi join
           3.outer joins
                     1.left outer join
                     2.right outer join
                     3.full outer join
           4.self join

1.cross join/cartesian join:
--------------------------         
         -In this join , it returns each and every record of the table is going to be
          matched.
         -In Cross Join, if table A contains 10 records and table B contains 4 records,
          then the cross join will return 40 records. 
         -whenever we use cross join, will get correct data as well as incorrect data 

CMD: select * from tableA cross join tableB;
     select * from tableA,tableB;

2.inner join/equi join:
----------------------
        - it returns only the matched records.
        - In inner join, if table A contains 10 records and table B contains 4 records,
          then the inner join will return 4 records.
        - for equi joins, proper condition should be given in where clause.

CMD: select * from tableA inner join tableB where condition;
     select * from tableA,tableB where condition;

Note : condition must be matching in both the tables.

Q. WAQ to fetch data from employee and salaries table where first name of employee is Parto?
ans. select * from employees e inner join salaries s  where e.emp_no=s.emp_no and firstName='Parto';
                  or
     select * from employees e,salaries s where e.emp_no=s.emp_no and  firstName='Parto';


3.Outer join:
-------------
    - it returns matched records as well as unmatched records.
    types:
    ------
        1.left outer join/left join
        2.right outer join/right join
        3.full outer join/full join

  1.left outer join:
  =================
           -it returns all the records from left table and 
            matched records from right table.
          -if there is no matched records in right table, will return null values.

Q. WAQ to fetch data from employee and salaries table 
   where salary to date is equals to 2000-06-26?
ans.  select e.emp_no, e.first_name,s.salary
      from employees e left join salaries s
      on e.emp_no=s.emp_no and s.to_date='2000-06-26';

   2.right outer join/right join:
   ==============================
           -it returns all the records from right table and 
            matched records from left table.
          -if there is no matched records in left table, will return null values.

Q. WAQ to fetch data from employee and salaries table 
   where salary to date is equals to 2000-06-26?
ans.  select e.emp_no, e.first_name,s.salary
      from employees e right join salaries s
      on e.emp_no=s.emp_no and s.to_date='2000-06-26';

3.outer join/full outer join/full join:
=======================================
           -it returns all the records from both the tables.
           -it returns matched records as well as unmatched records.
           -it can't achieve by using mysql syntax.

CMD: select * from tableA full outer join tableB on condition; // not supported by mysql
                   or
     select * from tableA left join tableB on condition
                      union
     select * from tableA right join tableB on condition;
       


4.self join:
------------
          - joining the table with itself. 
          - without aliasing we can't use self join.  
          - to compare rows within same table
          - to find the relationship between rows within same table.

CMD:  select * from tableA a join tableA b on a.column=b.column;

Q. WAQ to compare the birth_date of employees?
ans. select a.emp_no  as emp1, a.birth_date as date1,
     b.emp_no as emp2, b.birth_date as date2
     from employees a join employees b
     on a.birth_date=b.birth_date and a.emp_no<>b.emp_no limit 10;

Q. WAQ to compare the first name of employees with other employees?
ans . select a.emp_no as emp1 , a.first_name as name1,
      b.emp_no as emp2, b.first_name as name2
      from employees a join employees b
      on a.first_name=b.first_name and a.emp_no<>b.emp_no limit 10;
