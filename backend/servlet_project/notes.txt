Servlet api: it is an api/library used to connect webpages with java
           : can create a servlet class by inherting properties from servlet hirearchy
           
   class----- Servlet-i------->Servlet Class
             |
   class----GenericServlet-ac--->Servlet Class
             |
   class----HttpServlet-ac----->Servlet Class
   
 
 creation of dynamic Project:
 ------------------------------
 ctr+N--->search dynamic ---->select dynamic web project--->provide project name--->
 set targetRuntime as apache (click on new runtime-->select server as apache--apache 9--->next--->
                               download and install/browse the installed location-->finish)
   -->next-->next--->select web.xml-->finish
   
  - after creating project add mysql connector java jar into project by copying into it
  - once copy mysql connector java.jar file -->right click-->buildpath-->configure buildpath-->
   In libraries--->choose classpath-->add jar -->select jar in current project -->apply and close
   -once added into project setup-->right click-->buildpath-->configure build path-->deployment assembly
   -->apply-->add--->java buildpath entries-->select mysql-->next and finsh-->apply and close
   
  
  create web pages in webApp folder
  create java classes in java folder
  
  
  Deployement Descriptor: it is a servlet component used to bind a  particular request
                          with a particular sevlet class
                    can achieve by using web.xml file/@webServlet annotation
                    
             @webServlet - is a class level annotation it accepts request in the format of string , 
                           need to specify req with /
                     ex:@WebServlet("/req_Name")
                     
              web.xml - it is a xml file used to bind req with a servlet class
                       - open web.xml in web-Inf --source
              
				  <servlet>
				  <servlet-name>refName</servlet-name>
				  <servlet-class>Fully Qualified Class Name</servlet-class>
				  </servlet>
				  
				  <servlet-mapping>
				  <servlet-name>refName</servlet-name>
				  <url-pattern>/url</url-pattern>
				  </servlet-mapping>
              
              
       
  Note: used web.xml or @webServlet for a req , can't use both at a time for same req              
                     

Request Dispatcher: it is a servlet component used to forward a request to a particular servlet
                  : it consist forward and include method
                  : forward method is used to forward the request to a current servlet to new resource
                  : include method is used to include the request to a current servlet to existing resource   


jsp:
-----  
   -java server pages are used to create dynamic web pages 
   -extension should be .jsp and save in webApp folder
   it consist jsp tags :
               1.scriptlet tag - used to execute java code  <% %>
               2.expression tag - used to evaluate java expression  / print data in html page <%= %>
               3.declarative tag - used to declare java variables <%! %>
               4.comment tag- used to add comments in jsp page<%--   --%>
               5.directive tag- used to add directives in jsp page/ used to add external  files<%@ %>

Note: can't have one jsp tag inside another jsp tag
    : can't have html tags inside jsp tag , but can have jsp tags inside html tags


---------------------------------------------------------------------------------
                                doGet                                   doPost
------------------------------------------------------------------------------- 
Purpose	                Fetch data	                         Submit data
Parameters Location	    URL (query string)	                  Request body
Security	                Less secure                       	More secure
Data Limit	                Limited (URL length)	         Practically unlimited
Caching	                  Yes	                                    No
Visibility	               Visible in url       	          Hidden from url
Usage Examples	   Search page, profile view	         Login, registration, payments  

-----------------------------------------------------------------------------------------------
Note: browser default request is get request
                     
 